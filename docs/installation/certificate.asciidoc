// to display images directly on GitHub
ifdef::env-github[]
:encoding: UTF-8
:lang: en
:doctype: book
:toc: left
:imagesdir: ../images
endif::[]

////

    This file is part of the PacketFence project.

    See PacketFence_Installation_Guide.asciidoc
    for authors, copyright and license information.

////


= PacketFence Certificates

== Summary

1. Introduction 
1.1 Context and Objectives of the Documentation 
1.2 Definitions and Basic Concepts 

2. Implementation of SSL/TLS Certificate for Captive Web Portal (HTTP) 
2.1 Generate a Certificate Signing Request (CSR) 
2.2 Submit the CSR to a Certificate Authority (CA) 
2.3 Install the SSL/TLS Certificate on the Server 

3. Renewal of SSL/TLS Certificate for Captive Portal and Web admin 
3.1 Information about renewal of SSL/TLS Certificate 
3.2 Adding the new certificate 

4. Implementation of SSL/TLS Certificate for RADIUS 
4.1 Generate CSR 
4.3 Install the SSL/TLS Radius Certificate on the Server 

5. Management of SSL/TLS Certificate for RADIUS 
5.1 Information about renewal of SSL/TLS Certificate 
5.2 Renewal of SSL/TLS Certificate 

6. Useful commands 

7. Glossary 

== 1. Introduction

=== 1.1 Context and Objectives of the Documentation

This documentation aims to provide information and instructions on the implementation, management, and troubleshooting of SSL/TLS certificates for the captive web portal (HTTP) and RADIUS.

The captive portal is a common method of user authentication on a wireless or wired network. It allows controlling user access by redirecting them to an authentication page where they must provide login information. The RADIUS protocol, on the other hand, is used for user authentication and authorization on a network.

=== 1.2 Definitions and Basic Concepts

Before addressing the implementation, management, and troubleshooting of SSL/TLS certificates, it is important to understand the basic concepts related to security and certificates. The following definitions will be used throughout this documentation:

- SSL/TLS: Secure Sockets Layer/Transport Layer Security, a security protocol that allows encrypting communications between a client and a server.
- SSL/TLS certificate: an electronic file that contains information to verify the identity of a server and establish a secure connection.
- Certificate Authority (CA): an entity that issues and manages SSL/TLS certificates by verifying the identity of the certificate owner.
- Intermediate Certificate: a type of digital certificate that is issued by a trusted root certificate authority and is used to establish a chain of trust between the root certificate and end-entity certificates.
- Private key: an encryption key used to protect confidential information, known only to the certificate owner.
- Public key: an encryption key used to decrypt information encrypted using the private key, known to all users.

By understanding these basic concepts, you will be better equipped to understand and implement SSL/TLS certificates for the captive web portal and RADIUS.

=== 1.3 Important note before starting

Wildcard certificate is strictly restricted to HTTP, you can't use this type of certificate for RADIUS. 
If you plan to implement certificat for HTTP and RADIUS, we recommand you to use only one certificate to facilitate management of these.

== 2. Implementation of SSL/TLS Certificate for Captive Web Portal (HTTP)

=== 2.1 Generate a Certificate Signing Request (CSR)

To implement an SSL/TLS certificate for the captive web portal (HTTP), the first step is to generate a Certificate Signing Request (CSR). The CSR includes information about the organization requesting the certificate, the domain name of the captive portal, and the public key that will be used to encrypt communications.

To generate a CSR, before Packetfence version X, please do it through CLI. Adapt the following block and paste it on one of your PacketFence servers. If you are planning to use the same certificate for RADIUS, generate the CSR with the command from "5.2 Submit the CSR to a Certificate Authority (CA)":

[source, shell]
----
( _fd="/usr/local/pf/conf/ssl/server.key" ; _fd_csr="/usr/local/pf/conf/ssl/MYCSR.csr" ; openssl req -new -sha256 -key ${_fd} -out ${_fd_csr} -config <(
cat <<EOF
[req]
default_bits = 2048
prompt = no
default_md = sha256
req_extensions = req_ext
distinguished_name = dn

[dn]
C=[.red]#Country#
ST=[.red]#State#
L=[.red]#Locality#
O=[.red]#Organization#
CN=[.red]#Common Name#

[req_ext]
subjectAltName = @alt_names
extendedKeyUsage = serverAuth

[alt_names]
DNS.1 = [.red]#pf.domain.lan#
DNS.2 = [.red]#packetfence.domain.lan#
EOF
))
----

=== 2.2 Submit the CSR to a Certificate Authority (CA)

Once you have generated the CSR, the next step is to submit it to a Certificate Authority (CA) for validation and issuance of the SSL/TLS certificate. There are many CAs to choose from, and it is important to select a reputable one that is trusted by major web browsers.

To submit the CSR to a CA, follow these steps:

1. Select a CA and follow their instructions for submitting a CSR.
2. The Subject Alternative Name must exactly match the captive portal hostname in Configuration > General Configuration > Hostname.
3. Ensure that your CA supports X509 in base 64 format.
4. Provide the CSR and any other required information, such as payment and proof of identity.
5. Wait for the CA to validate the CSR and issue the SSL/TLS certificate.
6. Download the CA certificate in Apache format.

If your CA provides the certificate in PKCS12 format, you can use the following commands to extract the .crt and .key files:

[source, shell]
----
openssl pkcs12 -in {{.temp_dir}}/{{.input.cn}}.p12 -clcerts -nokeys -out {{.temp_dir}}/{{.input.cn}}.crt -passin pass:secret
openssl pkcs12 -in {{.temp_dir}}/{{.input.cn}}.p12 -nocerts -nodes -out {{.temp_dir}}/{{.input.cn}}.key -passin pass:secret
----

=== 2.3 Install the SSL/TLS Certificate on the Server

Once you have received the SSL/TLS certificate from the CA, the final step is to install it on PacketFence. This involves configuring the web server to use the SSL/TLS certificate for encrypted communications.

To install the SSL/TLS certificate, follow these steps:

1. Open the web admin interface.
2. Go to `Configuration > System Configuration > SSL Certificates > HTTP > Edit HTTP Certificates`.
image::certificate/1-HTTP.png[scaledwidth="100%",alt="Prompt fields module"]
3. Import or open your certificate file (.crt) with a text editor and copy/paste the content into the "HTTPs Server Certificate" field.
image::certificate/2-HTTP-Certificate.png[scaledwidth="100%",alt="Prompt fields module"]
4. Import or open your private key file (.key) and copy/paste the content into the "HTTP Server Private Key" field.
image::certificate/3-HTTP-Private-key.png[scaledwidth="100%",alt="Prompt fields module"]
5. Turn on the options "Find HTTPs intermediate CA(s) automatically" and "Validate certificate chain".
image::certificate/4-HTTP-intermediate-chain.png[scaledwidth="100%",alt="Prompt fields module"]
6. Restart `haproxy-admin` and `haproxy-portal`, one server at a time. You can do this through the web admin page: `Status > Services`.
image::certificate/5-Services.png[scaledwidth="100%",alt="Prompt fields module"]
Alternatively, you can use the CLI with the following commands:
[source, shell]
----
systemctl restart packetfence-haproxy-admin
systemctl restart packetfence-haproxy-portal
----

By following these steps, you can implement an SSL/TLS certificate for the captive web portal (HTTP) and provide a secure connection for user authentication.

=== 3. Renewal of SSL/TLS Certificate for Captive Portal and Web admin

==== 3.1 Information about renewal of SSL/TLS Certificate

SSL/TLS certificates have an expiration date, typically ranging from one to three years. To ensure the captive web portal remains secure, it is important to renew the SSL/TLS certificate before it expires. To renew the SSL/TLS certificate, you can use your previous CSR or generate a new one with the exact same information. You will find all the information you need in `System Configuration > SSL Certificate > View HTTP Certificate`.
image::certificate/6-HTTP-View.png[scaledwidth="100%",alt="Prompt fields module"]

==== 3.2 Adding the new certificate

To add the new SSL/TLS certificate, follow these steps:

1. Open the PacketFence Web admin interface.

2. Go to `System Configuration > SSL Certificate > HTTP > Edit HTTP Certificates`.

3. Import the new certificate file (.crt) or paste the content of the new certificate using a text editor into the "HTTPs Server Certificate" field.
image::certificate/2-HTTP-Certificate.png[scaledwidth="100%",alt="Prompt fields module"]

4. Turn on the options "Find HTTPs intermediate CA(s) automatically" and "Validate certificate chain".
image::certificate/4-HTTP-intermediate-chain.png[scaledwidth="100%",alt="Prompt fields module"]

5. Press "Save" to finish the renewal.

6. Restart `haproxy-admin` and `haproxy-portal`, one server at a time. You can do this through the web admin page: Status > Services.
image::certificate/5-Services.png[scaledwidth="100%",alt="Prompt fields module"]

Alternatively, you can use the CLI with the following commands:
[source, shell]
----
systemctl restart packetfence-haproxy-admin
systemctl restart packetfence-haproxy-portal
----

=== 4. Implementation of SSL/TLS Certificate for RADIUS

==== 4.1 Generate CSR

If you already have a certificate for your captive portal, you can use the same certificate for RADIUS. In this case, please go directly to section 4.3 Install the SSL/TLS Certificate on the Server.

Warning: Wildcard certificates will not work with RADIUS. If you are using a wildcard certificate for your captive portal, you will need a new certificate specifically for RADIUS.

To generate a Certificate Signing Request (CSR) for RADIUS, use the following command:

[source, shell]
----
( _fd="/usr/local/pf/raddb/certs/server.key" ; _fd_csr="/usr/local/pf/raddb/certs/MYCSR.csr" ; openssl req -new -sha256 -key ${_fd} -out ${_fd_csr} -config <(
cat <<-EOF
[req]
default_bits = 2048
prompt = no
default_md = sha256
req_extensions = req_ext
distinguished_name = dn

[ dn ]
C=Country
ST=State
L=Locality
O=Organization
CN=Common Name

[ req_ext ]
subjectAltName = @alt_names
extendedKeyUsage = serverAuth

[ alt_names ]
DNS.1 = pf.domain.lan
DNS.2 = packetfence.domain.lan
EOF
))
----

==== 4.2 Submit the CSR to a Certificate Authority (CA)

Please refer to section 2.2 Submit the CSR to a Certificate Authority (CA) and follow the steps mentioned there.

==== 4.3 Install the SSL/TLS Radius Certificate on the Server

Once you have received the SSL/TLS certificate from the Certificate Authority (CA), the final step is to install it on the RADIUS server. This involves configuring the RADIUS server to use the SSL/TLS certificate for encrypted communications.

To install the SSL/TLS certificate on the RADIUS server, follow these steps:

1. Open the web admin interface.

2. Go to `Configuration > System Configuration > SSL Certificates > RADIUS > Edit RADIUS Certificates`.
image::certificate/7-Radius-edit.png[scaledwidth="100%",alt="Prompt fields module"]

3. Import or open your certificate file (.crt) with a text editor, then copy and paste the key into the "RADIUS Server Certificate" field.
image::certificate/8-Radius-certificate.png[scaledwidth="100%",alt="Prompt fields module"]

4. Import or open your private key file (.key) with a text editor, then copy and paste the key into the "RADIUS Server Private Key" field.
image::certificate/9-Radius-key.png[scaledwidth="100%",alt="Prompt fields module"]

5. Import or open your certification authority certificate file (.crt) with a text editor, then copy and paste the key into the "RADIUS Server Certification Authority Certificate" field.
image::certificate/10-Radius-CA.png[scaledwidth="100%",alt="Prompt fields module"]

6. Turn on the "Find RADIUS Server intermediate CA(s) automatically" and "Validate certificate chain" option.
image::certificate/13-Radius-intermediate-chain.png[scaledwidth="100%",alt="Prompt fields module"]

7. Restart all `radiusd` services that are running, including `radius-auth`, `radiusd-load-balancer`, `radiusd-acct`, `radiusd-eduroam`, and `radiusd-cli`. Restart them one server at a time. On the web admin page, go to `Status > Services`.
image::certificate/11-Services.png[scaledwidth="100%",alt="Prompt fields module"]

Alternatively, you can use the following commands in the command-line interface (CLI):

[source, shell]
----
systemctl restart packetfence-haproxy-admin
systemctl restart packetfence-haproxy-portal
bin/pfcmd service radiusd restart
----

=== 5. Management of SSL/TLS Certificate for RADIUS

==== 5.1 Information about Renewal of SSL/TLS Certificate

To renew the SSL/TLS certificate for RADIUS, you can use your previous Certificate Signing Request (CSR) or generate a new one with the exact same information. You can find all the necessary information in `System Configuration > SSL Certificate > View RADIUS Certificate`. It's important not to use a wildcard certificate for RADIUS.
image::certificate/12-Radius-status.png[scaledwidth="100%",alt="Prompt fields module"]

==== 5.2 Renewal of SSL/TLS Certificate

To renew the SSL/TLS certificate for RADIUS, follow these steps:

1. Open the PacketFence web admin interface `System Configuration > SSL Certificate > RADIUS > Edit RADIUS Certificates`.

2. Import the new certificate file (.crt) or paste the content of the new certificate using a text editor into the "RADIUS Server Certificate" field.
image::certificate/8-Radius-certificate.png[scaledwidth="100%",alt="Prompt fields module"]

3. Add the new Certification Authority certificate.
image::certificate/10-Radius-CA.png[scaledwidth="100%",alt="Prompt fields module"]

4. Turn on the "Find RADIUS Server intermediate CA(s) automatically" and "Validate certificate chain" option.
image::certificate/13-Radius-intermediate-chain.png[scaledwidth="100%",alt="Prompt fields module"]

5. Press "Save" to finish the renewal.

6. Restart all `radiusd` services that are running, including `radius-auth`, `radiusd-load-balancer`, `radiusd-acct`, `radiusd-eduroam`, and `radiusd-cli`. Restart them one server at a time. On the web admin page, go to Status > Services.
image::certificate/11-Services.png[scaledwidth="100%",alt="Prompt fields module"]

Alternatively, you can use the following commands in the command-line interface (CLI):

[source, shell]
----
systemctl restart packetfence-haproxy-admin
systemctl restart packetfence-haproxy-portal
bin/pfcmd service radiusd restart
----

=== 6. Useful Commands

- Check which configuration files use your certificate:
  [source, shell]
  ----
  grep -i "server.crt" -r ./
  ----

- Check your private key:
  [source, shell]
  ----
  _fd="private.key"
  openssl rsa -check -in ${_fd}
  ----

=== 7. Glossary

- .pem (Privacy Enhanced Mail): PEM is a base64-encoded certificate or key that is commonly used for transporting certificates over the internet or through email. It is a text file that contains a certificate or a private key in plain text.

- .pfx (Personal Information Exchange): PFX is a binary format used for storing a certificate with its associated private key. It is often used in Microsoft Windows systems and can also contain additional intermediate certificates required to establish a chain of trust.

- .crt (Certificate): CRT is a commonly used file extension for a digital certificate. It contains a public key, along with additional information about the certificate, such as the issuer and expiration date.

- .key (Key): KEY is a file extension used to indicate a private key. Private keys are used to decrypt data that has been encrypted using the corresponding public key in a digital certificate.

