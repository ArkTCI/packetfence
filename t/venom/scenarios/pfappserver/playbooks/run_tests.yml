---
- hosts: pfservers
  name: Run HTML pfappserver configurator tests
  become: True

  vars:
    test_suites:
    - pfappserver_configurator

  tasks:
    - name: Install and run tests
      block:
        - name: Install Cypress
          community.general.make:
            chdir: /usr/local/pf/t/html/pfappserver
            target: install
            file: /usr/local/pf/t/html/pfappserver/Makefile
          become: true
          tags: cypress

        - name: Run Venom testsuites
          command: '{{ venom_dir }}/venom-wrapper.sh {{ venom_dir }}/test_suites/{{ item }}'
          args:
            chdir: '{{ venom_dir }}'
          loop: '{{ test_suites }}'
          vars:
            venom_wrapper_args:
              # temp, overcome Venom issue:
              # - when running test suite one by one, previous logs and results are overriden
              # Venom will create one directory per test suite to store results
              VENOM_COMMON_FLAGS: '--output-dir={{ venom_dir }}/results/{{ item }}
                --var test_suite_results_dir={{ venom_dir }}/results/{{ item }}'

          # add inventory__group_environment to Ansible environment
          # useful to make env vars available for Venom
          environment: '{{ inventory__group_environment | d({})
                          | combine(venom_wrapper_args | d({})) }}'

      # handle block failure
      rescue:
        - name: find files in results/
          find:
            paths: '{{ venom_dir }}/results'
            recurse: yes
            file_type: file
          register: files_to_copy

        - name: debug1
          debug:
            msg: "{{ item }}"
          with_items: "{{ files_to_copy.files | map(attribute='path') }}"

        - name: debug2
          debug:
            msg: "{{ item | relpath('/usr/local/pf/t/venom/results') }}"
          with_items: "{{ files_to_copy.files | map(attribute='path') }}"

        - name: debug3
          debug:
            msg: "{{ venom_dir }}/results/{{ item | relpath('/usr/local/pf/t/venom/results') }}"
          with_items: "{{ files_to_copy.files | map(attribute='path') }}"

        - name: debug4
          debug:
            msg: "{{ venom_dir }}/results/{{ item | relpath('/usr/local/pf/t/venom/results') | dirname }}"
          with_items: "{{ files_to_copy.files | map(attribute='path') }}"

        - name: create results/ sub directories
          file:
            path: "{{ venom_dir }}/results/{{ item | relpath('/usr/local/pf/t/venom/results') | dirname }}"
            recurse: yes
          with_items: "{{ files_to_copy.files | map(attribute='path') }}"
          become: true

        - name: copy results/ to host
          fetch:
            src: '{{ item }}'
            dest: "{{ venom_dir }}/results/{{ item | relpath('/usr/local/pf/t/venom/results') }}"
            flat: yes
          with_items: "{{ files_to_copy.files | map(attribute='path') }}"
          become: true
